{
  "_args": [
    [
      "repl-plus@https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
      "/media/tengex/Storage1/Egyetem/16-17-1/ALKG/alkfejl"
    ]
  ],
  "_from": "repl-plus@>=0.2.0 <0.3.0",
  "_id": "repl-plus@0.2.0",
  "_inCache": true,
  "_location": "/repl-plus",
  "_phantomChildren": {},
  "_requested": {
    "name": "repl-plus",
    "raw": "repl-plus@https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
    "rawSpec": "https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/adonis-commands"
  ],
  "_resolved": "https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
  "_shasum": "b867555ca0c8beefe68910c6bd95b2c584b9a7d0",
  "_shrinkwrap": null,
  "_spec": "repl-plus@https://registry.npmjs.org/repl-plus/-/repl-plus-0.2.0.tgz",
  "_where": "/media/tengex/Storage1/Egyetem/16-17-1/ALKG/alkfejl",
  "author": {
    "name": "Jarom Loveridge"
  },
  "bin": {
    "mongoose-repl-plus": "./lib/mongoose-repl-plus.js",
    "repl-plus": "./lib/repl-plus.js"
  },
  "bugs": {
    "url": "https://github.com/gradecam/nodejs-repl-plus/issues"
  },
  "dependencies": {
    "co": "^4.5.4",
    "commander": "^2.8.1",
    "lodash": "^3.9.1",
    "mongoose": "^4.0.6",
    "q": "^1.4.1"
  },
  "description": "A batteries included REPL.",
  "devDependencies": {},
  "homepage": "https://github.com/gradecam/nodejs-repl-plus#readme",
  "keywords": [
    "co",
    "deferred",
    "promise",
    "repl",
    "shell"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "repl-plus",
  "optionalDependencies": {},
  "readme": "repl-plus\n=========\n\nA batteries included node REPL with yield support.\n\n`repl-plus` enhances the basic node REPL with support for promises and generators.\nThe shell will automatically resolve variables which are promises when they become fulfilled.\nThis module is intended to be useful by itself or as a base for creating a custom\nREPL shell for your own projects.\n\n## Install\n\n```\nnpm install repl-plus\n```\n\nYou may want to install globally so you can benefit from the enhancements provided by\nthis REPL on a daily basis.\n\n## Usage\n\n```\n# assumes a global install\n$ repl-plus\nTo exit press ^C twice, or ^D once.\nrepl+> var d = q.defer(), p = d.promise;\nrepl+> d.resolve(22);\nresolved: p\nrepl+> p\n22\nrepl+> b = yield q(44)\n44\nrepl+> \n```\n\nAn example using `mongoose`\n\n```\n$ ./examples/mongoose.js\nTo exit press ^C twice, or ^D once.\nmongoose+> todos = yield models.Todo.find().exec()\n[ { _id: 55959a1d76da6c2a5fc61110,\n    title: 'Get MongooseReplPlus working.',\n    __v: 0,\n    done: true } ]\nmongoose+> .history\nvar d = q.defer(), p = d.promise;\nd.resolve(22);\np\nb = yield q(44)\ntodos = yield models.Todo.find().exec()\nmongoose+> \n```\n\n## Inspired By\n\n* [embed-shell](https://github.com/gradecam/nodejs-embed-shell)\n* [co-repl](https://github.com/littlehaker/co-repl)\n* [co-yongoose](https://github.com/littlehaker/co-yongoose)\n* [repl.history](https://github.com/tmpvar/repl.history)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gradecam/nodejs-repl-plus.git"
  },
  "scripts": {
    "start": "node --harmony ./lib/repl-plus.js"
  },
  "version": "0.2.0"
}
