{
  "_args": [
    [
      "cat-log@https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
      "/media/tengex/Storage1/Egyetem/16-17-1/ALKG/alkfejl"
    ]
  ],
  "_from": "cat-log@>=1.0.0 <2.0.0",
  "_id": "cat-log@1.0.2",
  "_inCache": true,
  "_location": "/cat-log",
  "_phantomChildren": {},
  "_requested": {
    "name": "cat-log",
    "raw": "cat-log@https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
    "rawSpec": "https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/adonis-ace",
    "/adonis-auth",
    "/adonis-fold",
    "/adonis-framework",
    "/adonis-lucid"
  ],
  "_resolved": "https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
  "_shasum": "1b6dd780b3f60d518af12bbc62c771b8b2eaef40",
  "_shrinkwrap": null,
  "_spec": "cat-log@https://registry.npmjs.org/cat-log/-/cat-log-1.0.2.tgz",
  "_where": "/media/tengex/Storage1/Egyetem/16-17-1/ALKG/alkfejl",
  "author": {
    "name": "adonisjs"
  },
  "bugs": {
    "url": "https://github.com/poppinss/cat-log/issues"
  },
  "dependencies": {
    "ms": "^0.7.1",
    "npmlog": "^2.0.0"
  },
  "description": "Logger on top of npmlog and intercepts cli flags for showing log messages",
  "devDependencies": {
    "chai": "^3.4.1",
    "coveralls": "^2.11.6",
    "istanbul": "^0.4.1",
    "mocha": "^2.3.4",
    "mocha-lcov-reporter": "^1.0.0",
    "test-console": "^1.0.0"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "homepage": "https://github.com/poppinss/cat-log#readme",
  "keywords": [
    "debug",
    "logger"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "cat-log",
  "optionalDependencies": {},
  "readme": "# CatLog\n\nCat log is a simple logging library based on npmlog and terminal flags.\n\n### info\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.info('some important information')\n\n// node index.js\n// -> info some important information\n```\n\n### warn\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.warn('on fire')\n\n// node index.js\n// -> warn on fire\n```\n\n### error\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.error('i cannot help now')\n\n// node index.js\n// -> err i cannot help now\n```\n\n## Using Flags\n\nBy default `Catlog` is initiated in `info` mode, which means `info, warn and error` will be displayed while logging. All other log levels are muted in info mode and you are expected to set specific modes while initiating class or pass terminal flags for same\n\n### debug\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.debug('debugging http request')\n\n// node index.js --debug\n// -> debug debugging http request\n```\n\n\n### verbose\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.verbose('good to know')\n\n// node index.js --verbose\n// -> verbose good to know\n```\n\n### silly\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog()\nlog.silly('ahhuh')\n\n// node index.js --silly\n// -> silly ahhuh\n```\n\n## Initiating with a given log level\n\nAlso you can initiate the class with a given log level instead of passing command line flags.\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog('', 'silly')\nlog.silly('ahhuh')\n\n// node index.js\n// -> silly ahhuh\n```\n\n\n## Prefixing logs\n\n```javascript\nconst CatLog = require('cat-log')\nconst log = new CatLog('adonis')\nlog.info('this is info')\n\n// node index.js\n// -> info adonis this is info\n```\n\nCOPYRIGHT (c) 2015 <Harminder Virk>\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/poppinss/cat-log.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha test",
    "test": "istanbul cover _mocha --report lcovonly -- -R spec test && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage"
  },
  "version": "1.0.2"
}
